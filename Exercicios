## Alguns pacotes
require(ggplot2)
require(gridExtra)
require(ggthemes)
require(dplyr)
require(GGally)
require(vcd)
require(extracat)
require(GDAdata)
library(forcats)

## O que � ggplot?
#Data
#Geometric object (geom) pontos? linhas?
#Statistical transformation (stat)
#Scales - linear, log, ...
#Coordinate system
#(+ Position adjustment, facetting)
#layers

ceosal1 <- read.csv("C:/Users/cesar/Desktop/Aula de econometria/ceosal1.csv")
View(ceosal1)

qplot(ceosal1$salary, ceosal1$sales)
qplot(salary, sales, data = ceosal1)
qplot(salary, sales, data = ceosal1,
      colour=roe)
qplot(salary, sales, data = ceosal1,
      geom=c("point", "smooth"))

qplot(salary, data = ceosal1,
      geom="histogram", binwidth = 0.5)

## Gr�ficos para dados categorizados

# Spline Plots

View(heart)

as.data.frame.matrix(heart)

# ageage in years
#sex(1 = male; 0 = female)
#cpchest pain type
#trestbpsresting blood pressure (in mm Hg on admission to the hospital)
#cholserum cholestoral in mg/dl
#fbs(fasting blood sugar > 120 mg/dl) (1 = true; 0 = false)
#restecgresting electrocardiographic results
#thalachmaximum heart rate achieved
#exangexercise induced angina (1 = yes; 0 = no)
#oldpeakST depression induced by exercise relative to rest
#slopethe slope of the peak exercise ST segment
#canumber of major vessels (0-3) colored by flourosopy
#thal3 = normal; 6 = fixed defect; 7 = reversable defect
#target1 or 0

spp=factor(heart$Chest.Pain.Type)

(spineplot(heart$sex ~ heart$Chest.Pain.Type))

# Mosaic Plots

library(vcd)
mosaic(HairEyeColor, shade=TRUE, legend=TRUE)

## Gr�ficos para dados cont�nuos
# Scatterplot Matrices

plot(heart[,c(3,4,5)])

require(tourr)
help(package="tourr")


animate(heart[, 3:6], grand_tour(d = 2), display = display_xy())
animate(heart[, 3:6], grand_tour(d = 3), display = display_depth())
animate(heart[, 3:6], grand_tour(d = 4), display = display_pcp())

## parallel coordinates

library (GGally)

View (diamonds)

diamonds.samp <- diamonds[sample(1:dim(diamonds)[1], 100), ]

ggparcoord(data = diamonds.samp, columns = c(1, 5:10), groupColumn = 2)
           
# interpretando clusters

require(fastcluster)
require(graphics)
require (mclust)

View (USArrests)

college <- read.csv("C:/Users/cesar/Downloads/college.csv")

hcav <- hclust(dist(college), method="ave")
clu3 <- cutree(hcav, k=3)
clus <- factor(clu3)
usa1 <- cbind(college, clus)
ggparcoord(usa1, columns=1:4, groupColumn="clus",
           scale="uniminmax", mapping = aes(size = 1)) +
  xlab("") +  ylab("") +
  theme(legend.position = "none")

pairs(college, panel = panel.smooth, main = "College")

require(RColorBrewer)
cores = brewer.pal(3,"Accent")
pairs(college, panel = panel.smooth, main = "College", 
      col=cores[usa1$clus])

## Dados Mistos
require(lattice)

bwplot(clarity ~ price , data=diamonds,
       horizontal = F)
ggplot(diamonds, aes(factor(clarity),100/price)) + geom_boxplot() +
  ylab("Clarity") + xlab("price")

## exemplo de 
## http://www.stat.ubc.ca/~jenny/STAT545A/block09_xyplotLattice.html

library(lattice)

jDat <- heart

str(jDat)
x11()
xyplot(heart$age ~ heart$Colesterol, jDat, grid = TRUE,  type = c("p", "smooth"))
       

# o primeiro elemento de type pode ser p(ontos), l(inhas), a(mbos); 
# o segundo elemento pode ser r(egress�o) ou smooth.


## Missing Value Plots
# https://cran.r-project.org/web/packages/mi/index.html
require(mi)
data(nlsyV, package = "mi")
View(nlsyV)

mdf <- missing_data.frame(nlsyV)

# verifica se a classe est� correta
show(mdf) 
# momrace is guessed to be ordered
# renda � de fato n�o negativa

mdf <- change(mdf, y = c("income", "momrace"), what = "type",
              to = c("non", "un"))

# tudo certo agora?
show(mdf)

# vamos explorar os dados
summary(mdf)
image(mdf)
hist(mdf)

# esse pacote tamb�m faz imputa��o, que n�o � nosso interesse no momento

## ggplot2 tamb�m lida com missing
require(ggplot2)
require(GGally)
mmissing <- movies
mmissing[sample(nrow(movies), 1000), sample(ncol(movies), 5)] <- NA
ggmissing(mmissing)
ggmissing(mmissing, order=FALSE, missing.only = FALSE)
ggmissing(mmissing, avoid="dodge") + scale_y_sqrt()

## Gr�ficos Conjuntos
x11()
data(Fertility, package="AER")
p0 <- ggplot(Fertility) + geom_histogram(binwidth=1) + ylab("")
p1 <- p0 + aes(x=age)
p2 <- p0 + aes(x=work) + xlab("Weeks worked in 1979")
k <- ggplot(Fertility) + geom_bar() + ylab("") + ylim(0,250000)
p3 <- k + aes(x=morekids) + xlab("has more children")
p4 <- k + aes(x=gender1) + xlab("first child")
p5 <- k + aes(x=gender2) + xlab("second child")
p6 <- k + aes(x=afam) + xlab("African-American")
p7 <- k + aes(x=hispanic) + xlab("Hispanic")
p8 <- k + aes(x=other) + xlab("other race")
grid.arrange(arrangeGrob(p1, p2, ncol=2, widths=c(3,3)),
             arrangeGrob(p3, p4, p5, p6, p7, p8, ncol=6),
             nrow=2, heights=c(1.25,1))


## Alguns pacotes
require(ggplot2)
require(gridExtra)
require(ggthemes)
require(dplyr)
require(GGally)
require(vcd)
require(extracat)
require(GDAdata)

## O que � ggplot?
#Data
#Geometric object (geom) pontos? linhas?
#Statistical transformation (stat)
#Scales - linear, log, ...
#Coordinate system
#(+ Position adjustment, facetting)
#layers
qplot(diamonds$carat, diamonds$price)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds,
      colour=clarity)
qplot(carat, price, data = diamonds,
      geom=c("point", "smooth"))
qplot(carat, data = diamonds,
      geom="histogram")
qplot(carat, data = diamonds,
      geom="histogram", binwidth = 0.25)

## Gr�ficos para dados categorizados

# Spline Plots
(spineplot(margin.table(UCBAdmissions, c(3, 2)), 
           main = "Applications at UCB"))
mosaicplot(margin.table(UCBAdmissions, c(3, 2)),color=T)


# Mosaic Plots
mosaicplot(Titanic, main = "Survival on the Titanic", color = TRUE)
mosaicplot(Titanic, main = "Survival on the Titanic", shade = TRUE)

data(housing, package="MASS")
mosaic(xtabs(Freq ~ Cont + Type + Infl + Sat, data = housing),
       direction = c("h", "v", "v", "h"), 
       gp = gpar(fill = c("grey", "grey","red")),
       spacing = spacing_highlighting)

## Gr�ficos para dados cont�nuos
cars2004 = read.delim("2004Cars.txt")
# Scatterplot Matrices
plot(cars2004[,c(4,6,8,9,11)])

require(tourr)
help(package="tourr")
animate(flea[, 1:6], grand_tour(d = 2), display = display_xy())
animate(flea[, 1:6], grand_tour(d = 3), display = display_depth())
animate(flea[, 1:6], grand_tour(d = 4), display = display_pcp())

## parallel coordinates
ggparcoord(iris, columns=1:4, groupColumn="Species")

# interpretando clusters
hcav <- hclust(dist(USArrests), method="ave")
clu3 <- cutree(hcav, k=3)
clus <- factor(clu3)
usa1 <- cbind(USArrests, clus)
ggparcoord(usa1, columns=1:4, groupColumn="clus",
           scale="uniminmax", mapping = aes(size = 1)) +
  xlab("") +  ylab("") +
  theme(legend.position = "none")

pairs(USArrests, panel = panel.smooth, main = "USArrests data")

require(RColorBrewer)
cores = brewer.pal(3,"Accent")
pairs(USArrests, panel = panel.smooth, main = "USArrests data", 
      col=cores[usa1$clus])

## Dados Mistos
require(lattice)
bwplot(City.Miles.Per.Gallon ~ Number.of.Cylinders , data=cars2004,
       horizontal = F)
ggplot(cars2004, aes(factor(Number.of.Cylinders),100/City.Miles.Per.Gallon)) + geom_boxplot() +
  ylab("Gallons per 100 miles") + xlab("Number of Cylinders")

## exemplo de 
## http://www.stat.ubc.ca/~jenny/STAT545A/block09_xyplotLattice.html
gDat <- read.delim("gapminderDataFiveYear.txt")
str(gDat)

## drop Oceania
jDat <- droplevels(subset(gDat, continent != "Oceania"))
str(jDat)
x11()
xyplot(lifeExp ~ gdpPercap | continent, jDat,
       grid = TRUE,
       scales = list(x = list(log = 10, equispaced.log = FALSE)),
       type = c("p", "smooth"), col.line = "darkorange", lwd = 4)
xyplot(lifeExp ~ gdpPercap | continent, jDat,
       grid = TRUE, group = continent,
       scales = list(x = list(log = 10, equispaced.log = FALSE)),
       type = c("p", "smooth"), lwd = 4)
# o primeiro elemento de type pode ser p(ontos), l(inhas), a(mbos); 
# o segundo elemento pode ser r(egress�o) ou smooth.


## Missing Value Plots
# https://cran.r-project.org/web/packages/mi/index.html
require(mi)
data(nlsyV, package = "mi")
mdf <- missing_data.frame(nlsyV)

# verifica se a classe est� correta
show(mdf) 
# momrace is guessed to be ordered
# renda � de fato n�o negativa

mdf <- change(mdf, y = c("income", "momrace"), what = "type",
              to = c("non", "un"))

# tudo certo agora?
show(mdf)

# vamos explorar os dados
summary(mdf)
image(mdf)
hist(mdf)

# esse pacote tamb�m faz imputa��o, que n�o � nosso interesse no momento

## ggplot2 tamb�m lida com missing
require(ggplot2)
require(GGally)
mmissing <- movies
mmissing[sample(nrow(movies), 1000), sample(ncol(movies), 5)] <- NA
ggmissing(mmissing)
ggmissing(mmissing, order=FALSE, missing.only = FALSE)
ggmissing(mmissing, avoid="dodge") + scale_y_sqrt()

## Gr�ficos Conjuntos
x11()
data(Fertility, package="AER")
p0 <- ggplot(Fertility) + geom_histogram(binwidth=1) + ylab("")
p1 <- p0 + aes(x=age)
p2 <- p0 + aes(x=work) + xlab("Weeks worked in 1979")
k <- ggplot(Fertility) + geom_bar() + ylab("") + ylim(0,250000)
p3 <- k + aes(x=morekids) + xlab("has more children")
p4 <- k + aes(x=gender1) + xlab("first child")
p5 <- k + aes(x=gender2) + xlab("second child")
p6 <- k + aes(x=afam) + xlab("African-American")
p7 <- k + aes(x=hispanic) + xlab("Hispanic")
p8 <- k + aes(x=other) + xlab("other race")
grid.arrange(arrangeGrob(p1, p2, ncol=2, widths=c(3,3)),
             arrangeGrob(p3, p4, p5, p6, p7, p8, ncol=6),
             nrow=2, heights=c(1.25,1))
